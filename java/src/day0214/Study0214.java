package day0214;

class Study0214 {
	public static void main(String[] args) 
	{
/*
	do-while
	for
	break
	continue

	do-while
		do{
			실행문;
		}while(조건식);
		{코드블록}을 실행한 이후 조건식을 검사한다.
		조건식이 false여도 최소 1회 실행된다.
		코드블록이 반드시 1회 이상 실행되야 할 때 사용한다.
	
	for
		for(초기식; 조건식; 증감식){
			실행문;
		}
		가장 많이 사용하는 반복문. 배열과 주로 사용.
		반복문을 구현하는데 필요한 요소들을 함께 작성.
		필요한 요소들을 한줄에 작성하기 때문에 간결, 가독성이 좋다.

		초기식 - for문 시작 할 때 한번만 실행
		조건식 - 언제까지 반복할 것인지 구현
		증감식 - 증가/감소
		수행 순서가 중요함
		초기식-> 조건식-> 실행문-> 증감식-> 조건식-> 실행문-> 증감식-> 조건식-> ....-> 조건식false-> 종료

		초기식, 조건식 둘다 문법상으로 생략 가능하다
		보통 초기식 생략은 하지 않는다.
		조건식 생략시 무한루프가 만들어 진다.
		for( ; ; 증감식){실행문;}

	break
		break;를 만나면 그 지점에서 반복문을 빠져나온다. (뒤로 실행문이 더 있어도 무시)
		중첩된 반복문에서 사용시, 가장 가까운 반복문만 빠져나온다.
		for(){
			for(){
				if(){break;}	안쪽의 for문만 빠져나오고 바깥쪽 for문은 이어서 실행된다.
			}
		}

	continue
		반복문 안에서 continue;를 만나면 이후의 코드 실행하지 않고 반복문 다시 수행
		for문: 증감식으로 이동
		while문: 조건식으로 이동
		반복문 수행 중 특정 조건에서는 수행하지 않고 건너뛰어야 할 때 사용.

*/
	}
}
